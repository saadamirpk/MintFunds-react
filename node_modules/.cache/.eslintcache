[{"/Users/saadamirpk/Documents/GitHub/mintfunds/src/index.tsx":"1","/Users/saadamirpk/Documents/GitHub/mintfunds/src/reportWebVitals.ts":"2","/Users/saadamirpk/Documents/GitHub/mintfunds/src/App.tsx":"3","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Header.tsx":"4","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Balance.tsx":"5","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/AddTransaction.tsx":"6","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/TransactionHistory.tsx":"7","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Transaction.tsx":"8","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Context/GlobalState.tsx":"9","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Context/AppReducer.tsx":"10"},{"size":554,"mtime":1652640207698,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1652619308550,"results":"13","hashOfConfig":"12"},{"size":550,"mtime":1652736535561,"results":"14","hashOfConfig":"12"},{"size":114,"mtime":1652634062917,"results":"15","hashOfConfig":"12"},{"size":1424,"mtime":1652737350180,"results":"16","hashOfConfig":"12"},{"size":1374,"mtime":1652739099360,"results":"17","hashOfConfig":"12"},{"size":989,"mtime":1652738267527,"results":"18","hashOfConfig":"12"},{"size":739,"mtime":1652742003420,"results":"19","hashOfConfig":"12"},{"size":1336,"mtime":1652738568192,"results":"20","hashOfConfig":"12"},{"size":443,"mtime":1652737894841,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1ygo159",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"25"},"/Users/saadamirpk/Documents/GitHub/mintfunds/src/index.tsx",[],[],[],"/Users/saadamirpk/Documents/GitHub/mintfunds/src/reportWebVitals.ts",[],[],"/Users/saadamirpk/Documents/GitHub/mintfunds/src/App.tsx",["58"],[],"import React, { createContext } from \"react\";\nimport Header from \"./Components/Header\";\nimport Balance from \"./Components/Balance\";\nimport TransactionHistory from \"./Components/TransactionHistory\";\nimport AddTransaction from \"./Components/AddTransaction\";\nimport { GlobalProvider } from \"./Context/GlobalState\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <GlobalProvider>\n        <Header />\n        <Balance />\n        <AddTransaction />\n        <TransactionHistory />\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Header.tsx",[],[],"/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Balance.tsx",[],[],"/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/AddTransaction.tsx",["59","60"],[],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\nimport { nanoid } from \"nanoid\";\nimport { trans } from \"../types\";\n\nexport default function AddTransaction() {\n  const [tranText, setTranText] = useState<string>(\"\");\n  const [tranAmount, setTranAmount] = useState<string>(\"\");\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  function addTransHandle(e: any) {\n    e.preventDefault();\n    if (tranText != \"\" && tranAmount != \"\") {\n      const t: trans = {\n        id: nanoid(),\n        text: tranText,\n        amount: parseInt(tranAmount),\n      };\n      addTransaction(t);\n      setTranText(\"\");\n      setTranAmount(\"\");\n    } else {\n      console.log(\"Cannot have Transaction Text or Amount be Null\");\n    }\n    //add to context\n  }\n\n  return (\n    <div>\n      <span className=\"subtitle\">Make Transaction</span>\n      <hr />\n      <br />\n      <form>\n        <input\n          className=\"f-r\"\n          type=\"number\"\n          placeholder=\"Amount\"\n          onChange={(e) => setTranAmount(e.target.value)}\n          value={tranAmount}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Text\"\n          onChange={(e) => setTranText(e.target.value)}\n          value={tranText}\n        />\n        <button onClick={addTransHandle}>Add Transaction</button>\n      </form>\n    </div>\n  );\n}\n","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/TransactionHistory.tsx",["61"],[],"import React, { useContext, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport default function TransactionHistory() {\n  const { transactions } = useContext(GlobalContext);\n  const [showAll, setShowAll] = useState(false);\n\n  const TransactionDisplay = transactions.map((transaction, ind) => {\n    if (ind < 3) {\n      return <Transaction key={transaction.id} transaction={transaction} />;\n    }\n    return;\n  });\n\n  const TransactionDisplayAll = transactions.map((transaction, ind) => {\n    return <Transaction key={transaction.id} transaction={transaction} />;\n  });\n\n  return (\n    <div>\n      <span className=\"subtitle\">Recent Transaction History</span>\n      <hr />\n      <br />\n      {showAll ? TransactionDisplayAll : TransactionDisplay}\n      <button onClick={() => setShowAll((prev) => !prev)}>\n        {showAll ? \"View Recent\" : \"View All\"}\n      </button>\n      <br />\n      <br />\n    </div>\n  );\n}\n","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Components/Transaction.tsx",["62","63"],[],"import React, { useContext } from \"react\";\nimport ic from \"../del-ic.png\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport default function Transaction({ transaction }: any) {\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  function getAmount(num: number) {\n    return num.toLocaleString();\n  }\n\n  return (\n    <div className={(sign == \"-\" ? \"minus\" : \"plus\") + \" transaction \"}>\n      {transaction.text}\n      <div onClick={() => deleteTransaction(transaction.id)} className=\"del\">\n        <img className=\"ic\" src={ic} />\n      </div>\n      <span className=\"amount\">\n        {sign} {getAmount(Math.abs(transaction.amount))}\n      </span>\n    </div>\n  );\n}\n","/Users/saadamirpk/Documents/GitHub/mintfunds/src/Context/GlobalState.tsx",[],[],"/Users/saadamirpk/Documents/GitHub/mintfunds/src/Context/AppReducer.tsx",["64"],[],"export default (state: any, action: any) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction: any) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n",{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":14,"column":18,"nodeType":"71","messageId":"72","endLine":14,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":14,"column":38,"nodeType":"71","messageId":"72","endLine":14,"endColumn":40},{"ruleId":"73","severity":1,"message":"74","line":13,"column":5,"nodeType":"75","messageId":"76","endLine":13,"endColumn":12},{"ruleId":"69","severity":1,"message":"77","line":15,"column":27,"nodeType":"71","messageId":"72","endLine":15,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":18,"column":9,"nodeType":"80","endLine":18,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":18,"endColumn":3},"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]